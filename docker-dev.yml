version: '3.8'

# 开发环境简化版docker-compose
# 只包含核心服务，用于快速开发和测试

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: sop-qa-postgres-dev
    environment:
      POSTGRES_DB: sop_qa_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sop-qa-dev-network
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: sop-qa-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - sop-qa-dev-network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123

  # Elasticsearch (用于向量搜索)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: sop-qa-elasticsearch-dev
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_dev_data:/usr/share/elasticsearch/data
    networks:
      - sop-qa-dev-network
    restart: unless-stopped

  # 后端 API 服务 (开发模式)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: sop-qa-backend-dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/sop_qa_db
      - REDIS_URL=redis://:redis123@redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - SECRET_KEY=dev-secret-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_dev_uploads:/app/uploads
    networks:
      - sop-qa-dev-network
    depends_on:
      - postgres
      - redis
      - elasticsearch
    restart: unless-stopped
    command: >
      sh -c "pip install -e . &&
             alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  # 前端服务 (开发模式)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: sop-qa-frontend-dev
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sop-qa-dev-network
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  elasticsearch_dev_data:
    driver: local
  backend_dev_uploads:
    driver: local

networks:
  sop-qa-dev-network:
    driver: bridge